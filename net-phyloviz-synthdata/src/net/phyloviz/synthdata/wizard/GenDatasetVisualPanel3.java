/*-
 * Copyright (c) 2016, PHYLOViZ Team <phyloviz@gmail.com>
 * All rights reserved.
 * 
 * This file is part of PHYLOViZ <http://www.phyloviz.net/>.
 *
 * This program is free software: you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the
 * Free Software Foundation, either version 3 of the License, or (at your
 * option) any later version.
 * 
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * for more details.
 * 
 * You should have received a copy of the GNU General Public License along
 * with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package net.phyloviz.synthdata.wizard;

import java.awt.Font;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.IOException;
import java.io.StringReader;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;
import javax.swing.JToggleButton;
import javax.swing.SwingWorker;
import javax.swing.UIManager;
import javax.swing.text.html.HTMLDocument;
import javax.swing.text.html.HTMLEditorKit;
import net.phyloviz.synthdata.simul.Simulator;

public final class GenDatasetVisualPanel3 extends JPanel {

    /** Creates new form GenDatasetVisualPanel3 */
    public GenDatasetVisualPanel3() {

	   initComponents();

	   try {
		  URL url = GenDatasetVisualPanel3.class.getResource("GenDatasetVisualPanel3.html");
		  jEditorPane1.setEditorKit(new HTMLEditorKit());
		  jEditorPane1.setPage(url);
		  Font font = UIManager.getFont("Label.font");
		  String bodyRule = "body { font-family: " + font.getFamily() + "; "
				+ "font-size: " + font.getSize() + "pt; width: " + jEditorPane1.getSize().width + "px;}";
		  ((HTMLDocument) jEditorPane1.getDocument()).getStyleSheet().addRule(bodyRule);
	   } catch (IOException e) {
		  Logger.getLogger(GenDatasetVisualPanel3.class.getName()).log(Level.WARNING,
				e.getLocalizedMessage());
	   }
    }

    @Override
    public String getName() {
	   return "Simulation";
    }

    public void initSimulator(String gensize, String gensampled, String popsize,
		  String pfsize, String mut, String rec, String seed) {
	   generations = Integer.parseInt(gensize);
	   genLast = Integer.parseInt(gensampled);
	   sizePop = Integer.parseInt(popsize);
	   sizePf = Integer.parseInt(pfsize);
	   rateMut = Integer.parseInt(mut);
	   rateRec = Integer.parseInt(rec);
	   randomseed = Integer.parseInt(seed);

	   jLabel8.setText("last " + gensampled + " sampled from a total of " + gensize);
	   jLabel9.setText(popsize + " individuals with " + pfsize + " loci");
	   jLabel10.setText("mutation= " + mut + "  recombination= " + rec);

	   jToggleButton1.setEnabled(true);
	   jToggleButton1.setSelected(false);
	   jProgressBar1.setString(null);
	   jProgressBar1.setValue(0);
	   bSim = false;
    }

    public boolean isSimulationFinished() {
	   return bSim;
    }

    public StringReader getDataset() {
	   if (!bSim || simulator == null) {
		  return null;
	   }
	   return new StringReader(simulator.writeLastPopGenerations());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jEditorPane1 = new javax.swing.JEditorPane();

        setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(new java.awt.GridLayout(4, 0, 0, 8));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(GenDatasetVisualPanel3.class, "GenDatasetVisualPanel3.jLabel1.text")); // NOI18N
        jLabel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(2, 12, 2, 8));
        jPanel3.add(jLabel1);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(GenDatasetVisualPanel3.class, "GenDatasetVisualPanel3.jLabel3.text")); // NOI18N
        jLabel3.setBorder(javax.swing.BorderFactory.createEmptyBorder(2, 12, 2, 8));
        jPanel3.add(jLabel3);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(GenDatasetVisualPanel3.class, "GenDatasetVisualPanel3.jLabel4.text")); // NOI18N
        jLabel4.setToolTipText(org.openide.util.NbBundle.getMessage(GenDatasetVisualPanel3.class, "GenDatasetVisualPanel3.jLabel4.toolTipText")); // NOI18N
        jLabel4.setBorder(javax.swing.BorderFactory.createEmptyBorder(2, 12, 2, 8));
        jPanel3.add(jLabel4);

        org.openide.awt.Mnemonics.setLocalizedText(jToggleButton1, org.openide.util.NbBundle.getMessage(GenDatasetVisualPanel3.class, "GenDatasetVisualPanel3.jToggleButton1.text")); // NOI18N
        jToggleButton1.setBorder(javax.swing.BorderFactory.createEmptyBorder(2, 12, 2, 8));
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jToggleButton1);

        jPanel2.add(jPanel3, java.awt.BorderLayout.WEST);

        jPanel4.setLayout(new java.awt.GridLayout(4, 0, 0, 8));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel8, org.openide.util.NbBundle.getMessage(GenDatasetVisualPanel3.class, "GenDatasetVisualPanel3.jLabel8.text")); // NOI18N
        jLabel8.setBorder(javax.swing.BorderFactory.createEmptyBorder(2, 12, 2, 8));
        jPanel4.add(jLabel8);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel9, org.openide.util.NbBundle.getMessage(GenDatasetVisualPanel3.class, "GenDatasetVisualPanel3.jLabel9.text")); // NOI18N
        jLabel9.setBorder(javax.swing.BorderFactory.createEmptyBorder(2, 12, 2, 8));
        jPanel4.add(jLabel9);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel10, org.openide.util.NbBundle.getMessage(GenDatasetVisualPanel3.class, "GenDatasetVisualPanel3.jLabel10.text")); // NOI18N
        jLabel10.setBorder(javax.swing.BorderFactory.createEmptyBorder(2, 12, 2, 8));
        jPanel4.add(jLabel10);

        jProgressBar1.setBorder(javax.swing.BorderFactory.createEmptyBorder(2, 12, 2, 8));
        jProgressBar1.setStringPainted(true);
        jPanel4.add(jProgressBar1);

        jPanel2.add(jPanel4, java.awt.BorderLayout.CENTER);

        add(jPanel2, java.awt.BorderLayout.PAGE_START);

        jEditorPane1.setBackground(jPanel2.getBackground());
        jEditorPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(8, 12, 8, 12));
        jEditorPane1.setEditable(false);
        jEditorPane1.setMaximumSize(new java.awt.Dimension(200, 200));
        add(jEditorPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
    JToggleButton tb = (JToggleButton) evt.getSource();
    if (tb.isSelected()) {
	  jProgressBar1.setString(null);
	   task = new Task();
	   task.addPropertyChangeListener(new PropertyChangeListener() {

		  @Override
		  public void propertyChange(PropertyChangeEvent pce) {
			 if (pce.getPropertyName().equals("progress")) {
				int progress = (Integer) pce.getNewValue();
				jProgressBar1.setValue(progress);
			 }
		  }
	   });
	   task.execute();
    } else {
	   task.cancel(true);
    }
}//GEN-LAST:event_jToggleButton1ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables
    private Task task;
    private boolean bSim;
    private Simulator simulator;
    private int generations;
    private int genLast;
    private int sizePop;
    private int sizePf;
    private int rateMut;
    private int rateRec;
    private int randomseed;

    class Task extends SwingWorker<Void, Void> {

	   @Override
	   public Void doInBackground() {

		  bSim = false;
		  simulator = new Simulator(generations, genLast,
				sizePop, sizePf, rateMut, rateRec, randomseed);
		  for (int i = 1; i <= generations; i++) {
			 if (isCancelled()) {
				jProgressBar1.setString("Canceled!");
				return null;
			 }
			 simulator.runOneStep();
			 int percent = i * 100 / generations;
			 setProgress(percent);
			 jProgressBar1.setString(i + " of " + generations
				    + " generations (" + percent + " %)");
		  }
//			System.out.println("Cycle generations end.");
//		  jProgressBar1.setValue(100);
		  jToggleButton1.setEnabled(false);
		  jProgressBar1.setString("Done!");
		  bSim = true;
		  return null;
		  //TODO: System.out.println(simulator.dumpLastPopSTs());
	   }

	   @Override
	   public void done() {
		  setCursor(null); //turn off the wait cursor
	   }
    }
}
