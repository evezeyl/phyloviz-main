package net.phyloviz.loadmlst.wizard;

import java.awt.Font;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JPanel;
import javax.swing.JToggleButton;
import javax.swing.SwingWorker;
import javax.swing.UIManager;
import javax.swing.text.html.HTMLDocument;
import javax.swing.text.html.HTMLEditorKit;
import net.phyloviz.loadmlst.xml.Parser;
import org.openide.util.NbPreferences;

public final class LoadMLSTVisualPanel3 extends JPanel {

	private ArrayList<String> alLoci;
	private int iMaxIsolate;
	private Task task;
	private String sIsolateData;
	private boolean bEmpty;
	private int iDBIndex;

	/** Creates new form PubMLSTVisualPanel2 */
	public LoadMLSTVisualPanel3() {
	}

	private void setEditorPanel(String sFile) {
		try {
			URL url = LoadMLSTVisualPanel3.class.getResource(sFile);
			jEditorPane1.setEditorKit(new HTMLEditorKit());
			jEditorPane1.setPage(url);
			Font font = UIManager.getFont("Label.font");
			String bodyRule = "body { font-family: " + font.getFamily() + "; "
					+ "font-size: " + font.getSize() + "pt; width: " + jEditorPane1.getSize().width + "px;}";
			((HTMLDocument) jEditorPane1.getDocument()).getStyleSheet().addRule(bodyRule);
		} catch (IOException e) {
			// Do nothing...
			System.err.println(e.getMessage());
		}
	}

	public void setDatabase(int index) {
		// initialization
		iDBIndex = index;
		alLoci = Parser.getParser().getLoci(iDBIndex);
		//TODO criar uma cena global com isto
		initComponents();

		setEditorPanel("PubMLSTVisualPanel3a.html");
		bEmpty = true;
		// To prevent bad UI experience when comming back to this UI
		// www loader
		jRadioButton1.setSelected(true);
		for (int i = 0; i < alLoci.size(); i++) {
			jRadioButton1.setSelected(true);
			jtbDownload[i].setSelected(false);
			jtbDownload[i].setEnabled(false);
			jtfFile[i].setEnabled(true);
		}
	}

	@Override
	public String getName() {
		return "Sequence Data";
	}

	public String getFilename(int i) {
		return jtfFile[i].getText();
	}

	public boolean isEmpty() {
		return bEmpty;
	}

	public boolean hasPubMLSTData() {
		return jRadioButton2.isSelected();
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc="Generated Code">                          
	private void initComponents() {

		buttonGroup1 = new javax.swing.ButtonGroup();
		jPanel5 = new javax.swing.JPanel();
		jPanel2 = new javax.swing.JPanel();
		jRadioButton1 = new javax.swing.JRadioButton();
		jRadioButton2 = new javax.swing.JRadioButton();
		jPanel1 = new javax.swing.JPanel();
		jPanel8 = new javax.swing.JPanel();
		jLabel5 = new javax.swing.JLabel();
		jToggleButton2 = new javax.swing.JToggleButton();
		jLabel6 = new javax.swing.JLabel();
		jEditorPane1 = new javax.swing.JEditorPane();

		setLayout(new java.awt.BorderLayout());

		jPanel5.setLayout(new java.awt.BorderLayout());

		jPanel2.setLayout(new java.awt.GridLayout(2, 0));

		buttonGroup1.add(jRadioButton1);
		jRadioButton1.setSelected(true);
		org.openide.awt.Mnemonics.setLocalizedText(jRadioButton1, org.openide.util.NbBundle.getMessage(LoadMLSTVisualPanel3.class, "LoadMLSTVisualPanel3.jRadioButton1.text"));
		jRadioButton1.addActionListener(new java.awt.event.ActionListener() {

			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jRadioButton1ActionPerformed(evt);
			}
		});
		jPanel2.add(jRadioButton1);

		buttonGroup1.add(jRadioButton2);
		org.openide.awt.Mnemonics.setLocalizedText(jRadioButton2, org.openide.util.NbBundle.getMessage(LoadMLSTVisualPanel3.class, "LoadMLSTVisualPanel3.jRadioButton2.text"));
		jRadioButton2.addActionListener(new java.awt.event.ActionListener() {

			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jRadioButton2ActionPerformed(evt);
			}
		});
		jPanel2.add(jRadioButton2);

		jPanel5.add(jPanel2, java.awt.BorderLayout.PAGE_START);

		int lines = alLoci.size();
		jPanel1.setLayout(new java.awt.GridLayout(lines, 0));

		// Dynamic Frame begin
		jpLocusPanel = new javax.swing.JPanel[lines];
		jpLocusSubPanel = new javax.swing.JPanel[lines];
		jlName = new javax.swing.JLabel[lines];
		jtbDownload = new javax.swing.JToggleButton[lines];
		jtfFile = new javax.swing.JTextField[lines];
		jbLocusBrowse = new javax.swing.JButton[lines];

		for (int i = 0; i < alLoci.size(); i++) {
			jpLocusPanel[i] = new javax.swing.JPanel();
			jpLocusPanel[i].setLayout(new java.awt.BorderLayout());

			jpLocusSubPanel[i] = new javax.swing.JPanel();
			jpLocusSubPanel[i].setLayout(new javax.swing.BoxLayout(jpLocusSubPanel[i], javax.swing.BoxLayout.LINE_AXIS));

			jlName[i] = new javax.swing.JLabel(alLoci.get(i));
			jlName[i].setBorder(javax.swing.BorderFactory.createEmptyBorder(2, 12, 2, 8));
			jpLocusSubPanel[i].add(jlName[i]);

			jtbDownload[i] = new javax.swing.JToggleButton(org.openide.util.NbBundle.getMessage(LoadMLSTVisualPanel3.class, "LoadMLSTVisualPanel3.jtbDownload"));
			jtbDownload[i].setEnabled(false);
			jtbDownload[i].addActionListener(new java.awt.event.ActionListener() {

				public void actionPerformed(java.awt.event.ActionEvent evt) {
					jtbDownloadActionPerformed(evt);
				}
			});
			jpLocusSubPanel[i].add(jtbDownload[i]);

			javax.swing.JLabel jlOR = new javax.swing.JLabel(org.openide.util.NbBundle.getMessage(LoadMLSTVisualPanel3.class, "LoadMLSTVisualPanel3.jlOR"));
			jpLocusSubPanel[i].add(jlOR);

			jpLocusPanel[i].add(jpLocusSubPanel[i], java.awt.BorderLayout.WEST);

			jtfFile[i] = new javax.swing.JTextField();
			jtfFile[i].setEnabled(false);
			jpLocusPanel[i].add(jtfFile[i], java.awt.BorderLayout.CENTER);

			jbLocusBrowse[i] = new javax.swing.JButton();
			org.openide.awt.Mnemonics.setLocalizedText(jbLocusBrowse[i], org.openide.util.NbBundle.getMessage(LoadMLSTVisualPanel3.class, "LoadMLSTVisualPanel3.jbLocusBrowse.text"));
			jbLocusBrowse[i].setEnabled(false);
			jbLocusBrowse[i].addActionListener(new java.awt.event.ActionListener() {

				public void actionPerformed(java.awt.event.ActionEvent evt) {
					jbBrowseActionPerformed(evt);
				}
			});
			jpLocusPanel[i].add(jbLocusBrowse[i], java.awt.BorderLayout.EAST);

			jPanel1.add(jpLocusPanel[i]);
		}
		// Dynamic Frame end

		jPanel8.setLayout(new javax.swing.BoxLayout(jPanel8, javax.swing.BoxLayout.LINE_AXIS));

		org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(LoadMLSTVisualPanel3.class, "LoadMLSTVisualPanel3.jLabel5.text_1")); // NOI18N
		jLabel5.setBorder(javax.swing.BorderFactory.createEmptyBorder(2, 12, 2, 8));
		jPanel8.add(jLabel5);

		org.openide.awt.Mnemonics.setLocalizedText(jToggleButton2, org.openide.util.NbBundle.getMessage(LoadMLSTVisualPanel3.class, "LoadMLSTVisualPanel3.jToggleButton2.text")); // NOI18N
		jToggleButton2.setEnabled(
				false);
		jToggleButton2.addActionListener(
				new java.awt.event.ActionListener() {

					public void actionPerformed(java.awt.event.ActionEvent evt) {
						jToggleButton2ActionPerformed(evt);
					}
				});
		jPanel8.add(jToggleButton2);

		org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(LoadMLSTVisualPanel3.class, "LoadMLSTVisualPanel3.jLabel6.text_1")); // NOI18N
		jPanel8.add(jLabel6);

		jPanel5.add(jPanel1, java.awt.BorderLayout.CENTER);

		add(jPanel5, java.awt.BorderLayout.PAGE_START);

		jEditorPane1.setBackground(jPanel2.getBackground());
		jEditorPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(8, 12, 8, 12));
		jEditorPane1.setEditable(
				false);
		jEditorPane1.setMaximumSize(
				new java.awt.Dimension(200, 200));
		add(jEditorPane1, java.awt.BorderLayout.CENTER);
	}// </editor-fold>                        

	private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {
		for (int i = 0; i < alLoci.size(); i++) {
			jtbDownload[i].setEnabled(false);
			jtfFile[i].setEnabled(false);
			jbLocusBrowse[i].setEnabled(false);
		}
		setEditorPanel("LoadMLSTVisualPanel3a.html");
	}

	private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {
		for (int i = 0; i < alLoci.size(); i++) {
			jtbDownload[i].setEnabled(true);
			jtfFile[i].setEnabled(true);
			jbLocusBrowse[i].setEnabled(true);
		}
		setEditorPanel("LoadMLSTVisualPanel3b.html");
	}

	private void jbBrowseActionPerformed(java.awt.event.ActionEvent evt) {
		if (fc == null) {
			fc = new JFileChooser();
		}
		String dir = NbPreferences.forModule(LoadMLSTWizardAction.class).get("LAST_DIR", "");
		if (dir != null) {
			fc.setCurrentDirectory(new File(dir));
		}
		int r = fc.showDialog(this, "Open");
		if (r == JFileChooser.APPROVE_OPTION && fc.getSelectedFile() != null) {
			javax.swing.JButton jb = (javax.swing.JButton) evt.getSource();
			for (int i = 0; i < alLoci.size(); i++) {
				if (jbLocusBrowse[i].equals(jb)) {
					System.out.println("Found him!!!!");
					jtfFile[i].setText(fc.getSelectedFile().getAbsolutePath());
					NbPreferences.forModule(LoadMLSTWizardAction.class).put("LAST_DIR", fc.getCurrentDirectory().getPath());
					// TODO: read file immediately
					break;
				}
			}
		}
	}

	private void jtbDownloadActionPerformed(java.awt.event.ActionEvent evt) {
		JToggleButton tb = (JToggleButton) evt.getSource();
		for (int i = 0; i < alLoci.size(); i++) {
			if (jtbDownload[i].equals(tb)) {
				System.out.println("Found him!!!!");
				if (jtbDownload[i].isSelected()) {
					task = new Task(i);
					task.addPropertyChangeListener(new PropertyChangeListener() {

						@Override
						public void propertyChange(PropertyChangeEvent pce) {
							if (pce.getPropertyName().equals("progress")) {
								int progress = (Integer) pce.getNewValue();
							}
						}
					});
					task.execute();
				} else {
					task.cancel(true);
				}
				break;
			}
		}
	}

private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_jToggleButton2ActionPerformed

private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_jButton3ActionPerformed
	// Variables declaration - do not modify                     
	private javax.swing.ButtonGroup buttonGroup1;
	private javax.swing.JEditorPane jEditorPane1;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JPanel jPanel5;
	private javax.swing.JPanel jPanel8;
	private javax.swing.JRadioButton jRadioButton1;
	private javax.swing.JRadioButton jRadioButton2;
	private javax.swing.JToggleButton jToggleButton2;
	private JFileChooser fc;
	private javax.swing.JPanel[] jpLocusPanel;
	private javax.swing.JPanel[] jpLocusSubPanel;
	private javax.swing.JLabel[] jlName;
	private javax.swing.JToggleButton[] jtbDownload;
	private javax.swing.JTextField[] jtfFile;
	private javax.swing.JButton[] jbLocusBrowse;

	class Task extends SwingWorker<Void, Void> {

		private int index;

		private Task(int i) {
			index = i;
		}

		@Override
		public Void doInBackground() {
			// TODO something
			return null;
		}

		@Override
		public void done() {
			setCursor(null); //turn off the wait cursor
		}
	}
}
